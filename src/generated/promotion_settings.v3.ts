// @ts-nocheck
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/promotions/settings": {
    /**
     * Get Global Promotion Settings
     * @description Returns global promotion settings.
     */
    get: operations["getGlobalPromotionSettings"];
    /**
     * Update Global Promotion Settings
     * @description - Updates global promotion settings.
     * - Note: *promotions_apply_on_products_with_custom_product_price*, *number_of_coupons_allowed_at_checkout* and *promotions_triggered_by_products_with_zero_product_price* can only be modified by enterprise accounts.
     */
    put: operations["updateGlobalPromotionSettings"];
    parameters: {
      header: {
        Accept: components["parameters"]["Accept"];
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    GlobalPromotionSettings: {
      /**
       * @description - When the property is set to "true", promotions will apply for products with custom pricing.
       * - When the property is set to "false", promotions will not apply for products with custom pricing.
       * - Note: This field can only be edited for Enterprise Accounts.
       * @default false
       * @example false
       */
      promotions_apply_on_products_with_custom_product_price: boolean;
      /**
       * @description - When the property is set to "true", promotions will be triggered by zero price products.
       * - When the property is set to "false", promotions will not be triggered by zero price products.
       * - Note: This field can only be edited for Enterprise Accounts.
       * @default false
       * @example false
       */
      promotions_triggered_by_products_with_zero_product_price: boolean;
      /**
       * @description Specifies the number of coupons allowed at checkout on a single order.
       * - Note: This field can only be edited for Enterprise Accounts.
       * @default 1
       * @example 1
       */
      number_of_coupons_allowed_at_checkout: number;
      /**
       * @description - When the property is set to "true", promotions in a cart are calculated independently, each applied to the original price of the included products.
       * - When the property is set to "false", promotions in a cart are calculated cumulatively, applied to the order sub-total based on your promotion order.
       * @default true
       * @example true
       */
      promotions_applied_on_original_product_price: boolean;
    };
    ErrorResponse400: {
      schema?: components["schemas"]["betaErrorResponse400"];
    };
    ErrorResponse403: {
      schema?: components["schemas"]["betaErrorResponse403"];
    };
    ErrorResponse422: {
      schema?: components["schemas"]["betaErrorResponse422"];
    };
    betaErrorResponse400: components["schemas"]["BaseError"] & {
      error?: {
        /** @example Bad request. Authentication Required. */
        message?: string;
      };
    };
    betaErrorResponse403: components["schemas"]["BaseError"] & {
      error?: {
        /** @example Forbidden. Operation cannot be performed with existing privileges. */
        message?: string;
      };
    };
    betaErrorResponse422: components["schemas"]["BaseError"] & {
      errors?: {
          /** @description The field that caused the validation error. */
          field?: string;
          /** @description A specific error message describing the issue. */
          message?: string;
        }[];
    };
    /** @description Error payload for the BigCommerce API. */
    BaseError: {
      /** @description The HTTP status code. */
      status?: number;
      /** @description The error title describing the particular error. */
      title?: string;
    };
  };
  responses: never;
  parameters: {
    /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
    Accept: string;
    /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
    ContentType: string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get Global Promotion Settings
   * @description Returns global promotion settings.
   */
  getGlobalPromotionSettings: {
    parameters: {
      header: {
        Accept: components["parameters"]["Accept"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["GlobalPromotionSettings"];
        };
      };
      /** @description Bad request. */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse400"];
        };
      };
    };
  };
  /**
   * Update Global Promotion Settings
   * @description - Updates global promotion settings.
   * - Note: *promotions_apply_on_products_with_custom_product_price*, *number_of_coupons_allowed_at_checkout* and *promotions_triggered_by_products_with_zero_product_price* can only be modified by enterprise accounts.
   */
  updateGlobalPromotionSettings: {
    parameters: {
      header: {
        Accept: components["parameters"]["Accept"];
        "Content-Type": components["parameters"]["ContentType"];
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "promotions_triggered_by_products_with_zero_product_price": true,
         *   "promotions_apply_on_products_with_custom_product_price": false,
         *   "number_of_coupons_allowed_at_checkout": 1,
         *   "promotions_applied_on_original_product_price": true
         * }
         */
        "application/json": components["schemas"]["GlobalPromotionSettings"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["GlobalPromotionSettings"];
        };
      };
      /** @description Bad request. */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse400"];
        };
      };
      /** @description Promotion settings data is not valid. This is the result of missing required fields, or of invalid data. See the response for more details. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse422"];
        };
      };
    };
  };
}
