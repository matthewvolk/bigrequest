// @ts-nocheck
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/tax/customers": {
    /**
     * Get Tax Customers
     * @description Retrieves a list of customer tax data.
     */
    get: operations["getTaxCustomers"];
    /**
     * Update Tax Customers
     * @description Update the tax data associated with one or more customers.
     * This operation will be additive to any values already associated with the customer, overwriting any existing values.
     */
    put: operations["updateTaxCustomers"];
    /**
     * Delete Tax Customers
     * @description Delete tax data that is associated with one or more customers.
     */
    delete: operations["deleteTaxCustomers"];
    parameters: {
      header: {
        "Content-Type": components["parameters"]["ContentType"];
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description Represents a customer and their associated tax-related attributes. */
    TaxCustomer: {
      /**
       * @description A reference to the customer.
       * @example 157
       */
      customer_id: number;
      /**
       * @description A simple key-value pairing.
       * The tax property must be defined to associate a value.
       * These values will be sent to the active tax provider during Tax Provider API operations whenever the associated customer is included in the operation.
       * @example {
       *   "A-123456789": "26",
       *   "B-6731789": "200"
       * }
       */
      tax_properties: {
        [key: string]: unknown;
      };
    };
    /**
     * Response meta
     * @description Response metadata.
     */
    MetaOpen: {
      [key: string]: unknown;
    };
  };
  responses: never;
  parameters: {
    /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
    Accept: string;
    /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
    ContentType: string;
    /** @description ID of customer. To target multiple customers, provide a comma-separated list of IDs such as `12,34,56`. */
    customer_idin?: number[];
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get Tax Customers
   * @description Retrieves a list of customer tax data.
   */
  getTaxCustomers: {
    parameters: {
      query?: {
        "customer_id:in"?: components["parameters"]["customer_idin"];
      };
      header: {
        "Content-Type": components["parameters"]["ContentType"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["TaxCustomer"][];
            meta?: components["schemas"]["MetaOpen"];
          };
        };
      };
      /** @description Request parameters invalid */
      400: {
        content: never;
      };
    };
  };
  /**
   * Update Tax Customers
   * @description Update the tax data associated with one or more customers.
   * This operation will be additive to any values already associated with the customer, overwriting any existing values.
   */
  updateTaxCustomers: {
    parameters: {
      header: {
        "Content-Type": components["parameters"]["ContentType"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxCustomer"][];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["TaxCustomer"][];
            meta?: components["schemas"]["MetaOpen"];
          };
        };
      };
      /** @description The request body does not meet specifications. */
      422: {
        content: never;
      };
    };
  };
  /**
   * Delete Tax Customers
   * @description Delete tax data that is associated with one or more customers.
   */
  deleteTaxCustomers: {
    parameters: {
      query?: {
        "customer_id:in"?: components["parameters"]["customer_idin"];
      };
      header: {
        "Content-Type": components["parameters"]["ContentType"];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Request parameters invalid */
      400: {
        content: never;
      };
    };
  };
}
